//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SwipesCollectionManagement.UI.SwipesCollectingServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SwipesCollectingServiceReference.ISwipesCollectingService")]
    public interface ISwipesCollectingService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISwipesCollectingService/StartCollectingSwipes", ReplyAction="http://tempuri.org/ISwipesCollectingService/StartCollectingSwipesResponse")]
        void StartCollectingSwipes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISwipesCollectingService/StartCollectingSwipes", ReplyAction="http://tempuri.org/ISwipesCollectingService/StartCollectingSwipesResponse")]
        System.Threading.Tasks.Task StartCollectingSwipesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISwipesCollectingService/GetStatus", ReplyAction="http://tempuri.org/ISwipesCollectingService/GetStatusResponse")]
        System.Collections.Generic.Dictionary<string, string> GetStatus();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISwipesCollectingService/GetStatus", ReplyAction="http://tempuri.org/ISwipesCollectingService/GetStatusResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetStatusAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISwipesCollectingService/GetAllSwipes", ReplyAction="http://tempuri.org/ISwipesCollectingService/GetAllSwipesResponse")]
        SwipesCollectionManagement.Service.Models.Swipe[] GetAllSwipes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISwipesCollectingService/GetAllSwipes", ReplyAction="http://tempuri.org/ISwipesCollectingService/GetAllSwipesResponse")]
        System.Threading.Tasks.Task<SwipesCollectionManagement.Service.Models.Swipe[]> GetAllSwipesAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISwipesCollectingServiceChannel : SwipesCollectionManagement.UI.SwipesCollectingServiceReference.ISwipesCollectingService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SwipesCollectingServiceClient : System.ServiceModel.ClientBase<SwipesCollectionManagement.UI.SwipesCollectingServiceReference.ISwipesCollectingService>, SwipesCollectionManagement.UI.SwipesCollectingServiceReference.ISwipesCollectingService {
        
        public SwipesCollectingServiceClient() {
        }
        
        public SwipesCollectingServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SwipesCollectingServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SwipesCollectingServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SwipesCollectingServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void StartCollectingSwipes() {
            base.Channel.StartCollectingSwipes();
        }
        
        public System.Threading.Tasks.Task StartCollectingSwipesAsync() {
            return base.Channel.StartCollectingSwipesAsync();
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetStatus() {
            return base.Channel.GetStatus();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> GetStatusAsync() {
            return base.Channel.GetStatusAsync();
        }
        
        public SwipesCollectionManagement.Service.Models.Swipe[] GetAllSwipes() {
            return base.Channel.GetAllSwipes();
        }
        
        public System.Threading.Tasks.Task<SwipesCollectionManagement.Service.Models.Swipe[]> GetAllSwipesAsync() {
            return base.Channel.GetAllSwipesAsync();
        }
    }
}
